syntax = "proto3";

package noble.forwarding.v1;

import "cosmos/base/v1beta1/coin.proto";
import "gogoproto/gogo.proto";
import "google/api/annotations.proto";

option go_package = "github.com/noble-assets/forwarding/x/forwarding/types";

service Query {
  rpc Address(QueryAddress) returns (QueryAddressResponse) {
    option (google.api.http).get = "/noble/forwarding/v1/address/{channel}/{recipient}";
  }

  rpc Stats(QueryStats) returns (QueryStatsResponse) {
    option (google.api.http).get = "/noble/forwarding/v1/stats";
  }

  rpc StatsByChannel(QueryStatsByChannel) returns (QueryStatsByChannelResponse) {
    option (google.api.http).get = "/noble/forwarding/v1/stats/{channel}";
  }
}

//

message QueryAddress {
  string channel = 1;
  string recipient = 2;
}

message QueryAddressResponse {
  string address = 1;
  bool exists = 2;
}

message QueryStats {}

message QueryStatsResponse {
  map<string, Stats> stats = 1 [(gogoproto.nullable) = false];
}

message QueryStatsByChannel {
  string channel = 1;
}

message QueryStatsByChannelResponse {
  uint64 num_of_accounts = 1;
  uint64 num_of_forwards = 2;
  repeated cosmos.base.v1beta1.Coin total_forwarded = 3 [
    (gogoproto.nullable) = false,
    (gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"
  ];
}

//

message Stats {
  string chain_id = 1;
  uint64 num_of_accounts = 2;
  uint64 num_of_forwards = 3;
  repeated cosmos.base.v1beta1.Coin total_forwarded = 4 [
    (gogoproto.nullable) = false,
    (gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"
  ];
}
